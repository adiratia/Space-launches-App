// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Connected to Home Component should render from Redux store 1`] = `
<View
  style={
    Object {
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView
    emulateUnlessSupported={true}
    style={
      Object {
        "alignItems": "center",
        "backgroundColor": "#f5f5f5",
        "flex": 1,
        "justifyContent": "center",
        "paddingTop": null,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "backgroundColor": "#f5f5f5",
          "flexDirection": "row",
          "overflow": "hidden",
          "paddingBottom": 13,
          "paddingTop": 13,
        }
      }
    >
      <View
        style={
          Object {
            "paddingHorizontal": 0,
            "width": "100%",
          }
        }
      >
        <View
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "#dcdce1",
              "borderBottomWidth": 0,
              "borderColor": "#86939e",
              "borderRadius": 9,
              "flexDirection": "row",
              "marginLeft": 8,
              "marginRight": 8,
              "minHeight": 36,
              "transform": Array [
                Object {
                  "translateX": 0,
                },
              ],
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "height": 40,
                "justifyContent": "center",
                "marginLeft": 8,
                "marginVertical": 4,
                "paddingRight": 4,
              }
            }
          >
            <View
              style={
                Object {
                  "overflow": "hidden",
                }
              }
            >
              <View>
                <View
                  style={
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "transparent",
                      "justifyContent": "center",
                    }
                  }
                >
                  <Text />
                </View>
              </View>
            </View>
          </View>
          <TextInput
            allowFontScaling={true}
            editable={true}
            onBlur={[Function]}
            onCancel={[Function]}
            onChangeText={[Function]}
            onFocus={[Function]}
            placeholder="Search launches..."
            placeholderTextColor="#7d7d7d"
            platform="ios"
            rejectResponderTermination={true}
            style={
              Object {
                "color": "#242424",
                "flex": 1,
                "fontSize": 18,
                "marginLeft": 6,
                "minHeight": 40,
                "overflow": "hidden",
              }
            }
            testID="searchInput"
            underlineColorAndroid="transparent"
            value=""
          />
          <View
            style={
              Object {
                "alignItems": "center",
                "height": 40,
                "justifyContent": "center",
                "marginRight": 8,
                "marginVertical": 4,
                "paddingRight": 4,
              }
            }
          >
            <View
              style={
                Object {
                  "flexDirection": "row",
                }
              }
            />
          </View>
        </View>
        <Text
          style={
            Object {
              "color": "#ff190c",
              "fontSize": 12,
              "height": 0,
              "margin": 0,
              "padding": 0,
            }
          }
        />
      </View>
      <View
        onLayout={[Function]}
        style={
          Object {
            "opacity": 0,
            "position": "absolute",
            "right": null,
          }
        }
      >
        <View
          accessibilityRole="button"
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                undefined,
                undefined,
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#007aff",
                    "fontSize": 18,
                    "padding": 8,
                    "textAlign": "center",
                  },
                  undefined,
                  undefined,
                  undefined,
                ]
              }
            >
              Cancel
            </Text>
          </View>
        </View>
      </View>
    </View>
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "center",
        }
      }
    >
      <View
        style={
          Array [
            Object {
              "borderRadius": 3,
              "overflow": "hidden",
            },
            Object {
              "borderRadius": 3,
            },
            undefined,
            false,
          ]
        }
      >
        <View
          accessibilityRole="button"
          accessibilityState={
            Object {
              "busy": false,
              "disabled": false,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "height": 60,
              "opacity": 1,
              "width": 120,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderColor": "#2089dc",
                "borderRadius": 3,
                "borderWidth": 0.5,
                "flexDirection": "row",
                "justifyContent": "center",
                "padding": 8,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#2089dc",
                  "fontSize": 18,
                  "paddingVertical": 1,
                  "textAlign": "center",
                }
              }
            >
              &lt;&lt; Previous
            </Text>
          </View>
        </View>
      </View>
      <View
        style={
          Object {
            "height": 20,
            "width": 20,
          }
        }
      />
      <View
        style={
          Array [
            Object {
              "borderRadius": 3,
              "overflow": "hidden",
            },
            Object {
              "borderRadius": 3,
            },
            undefined,
            false,
          ]
        }
      >
        <View
          accessibilityRole="button"
          accessibilityState={
            Object {
              "busy": false,
              "disabled": false,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "height": 60,
              "opacity": 1,
              "width": 120,
            }
          }
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "transparent",
                "borderColor": "#2089dc",
                "borderRadius": 3,
                "borderWidth": 0.5,
                "flexDirection": "row",
                "justifyContent": "center",
                "padding": 8,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "#2089dc",
                  "fontSize": 18,
                  "paddingVertical": 1,
                  "textAlign": "center",
                }
              }
            >
              Next &gt;&gt;
            </Text>
          </View>
        </View>
      </View>
    </View>
    <RCTScrollView
      style={
        Object {
          "width": "100%",
        }
      }
    >
      <View />
    </RCTScrollView>
  </RCTSafeAreaView>
</View>
`;
